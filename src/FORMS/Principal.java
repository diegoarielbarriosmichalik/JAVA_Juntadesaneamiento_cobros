package FORMS;

import FORMS.Logueo;
import dev.DBConexion;
import static dev.DBConexion.getSepararMiles;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Principal extends javax.swing.JFrame {

    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Junta de Saneamiento");
        setIconImage(new ImageIcon(getClass().getResource("/icon.png")).getImage());

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel_otros.setVisible(false);
        jTextField_otros.setVisible(false);

        jt_Nro_de_factura.requestFocus();

        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                close();
            }
        });

    }

    private void close() {
        if (JOptionPane.showConfirmDialog(rootPane, "¿Desea realmente salir del sistema?",
                "Salir del sistema", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jt_Nro_de_factura = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField_total = new javax.swing.JTextField();
        jTextField_comision = new javax.swing.JTextField();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel_otros = new javax.swing.JLabel();
        jTextField_otros = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jT_monto = new javax.swing.JTextField();
        Jt_Nombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jt_Nro_de_factura.setBorder(javax.swing.BorderFactory.createTitledBorder("Número de factura"));
        jt_Nro_de_factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jt_Nro_de_facturaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jt_Nro_de_facturaKeyReleased(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Confirmar Pago");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Factura", "Fecha", "Usuario", "Total", "Comision", "Otros ERS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(450);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel3.setText("Fecha:");

        jTextField_total.setEditable(false);
        jTextField_total.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_total.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_total.setForeground(new java.awt.Color(0, 102, 0));
        jTextField_total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jTextField_comision.setEditable(false);
        jTextField_comision.setBackground(new java.awt.Color(255, 255, 255));
        jTextField_comision.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_comision.setForeground(new java.awt.Color(0, 102, 0));
        jTextField_comision.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora_mini.png"))); // NOI18N
        jButton4.setToolTipText("Imprimir listado");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Anterior");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Siguiente");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel6.setText("Total:");

        jLabel7.setText("Comision:");

        jLabel_otros.setText("Otros:");

        jTextField_otros.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTextField_otros.setForeground(new java.awt.Color(0, 102, 0));
        jTextField_otros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_otros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_otrosActionPerformed(evt);
            }
        });

        jDateChooser2.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser2.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha"));

        jT_monto.setEditable(false);
        jT_monto.setBackground(new java.awt.Color(255, 255, 255));
        jT_monto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jT_monto.setForeground(new java.awt.Color(204, 0, 0));
        jT_monto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jT_monto.setBorder(javax.swing.BorderFactory.createTitledBorder("Monto a pagar"));

        Jt_Nombre.setEditable(false);
        Jt_Nombre.setBackground(new java.awt.Color(255, 255, 255));
        Jt_Nombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Jt_Nombre.setForeground(new java.awt.Color(204, 0, 0));
        Jt_Nombre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Jt_Nombre.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jt_Nro_de_factura, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(69, 69, 69)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Jt_Nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jT_monto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(187, 533, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(101, 101, 101))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_total, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_comision, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_otros)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_otros, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jt_Nro_de_factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5)
                            .addComponent(jButton6))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateChooser3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Jt_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(jTextField_total)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(jTextField_comision)
                        .addComponent(jLabel_otros)
                        .addComponent(jTextField_otros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jt_Nro_de_facturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt_Nro_de_facturaKeyReleased

    }//GEN-LAST:event_jt_Nro_de_facturaKeyReleased

    public synchronized static void Buscar() {
        try {
            Date dNow = new Date();
            Statement ST_Productos;

            ST_Productos = DBConexion.conexion.createStatement();
            ResultSet RS_Productos = ST_Productos.executeQuery("select nombre, total, id_factura_estado, emitido \n"
                    + "\n"
                    + "from factura \n"
                    + "\n"
                    + "inner join cliente on factura.id_cliente = cliente.id_cliente\n"
                    + "\n"
                    + " where numero = '" + jt_Nro_de_factura.getText() + "'");
            while (RS_Productos.next()) {

                if (RS_Productos.getInt("id_factura_estado") == 2) {
                    JOptionPane.showMessageDialog(null, "La factura se encuentra pagada");
                    jButton2.setEnabled(false);

//                        String strLong = Long.toString(RS_Productos.getLong("total"));
//                        String nuevo = getSepararMiles(strLong) + " Gs.";
//                        Jt_Nombre.setText(RS_Productos.getString("nombre").trim());
//                        jT_monto.setText(nuevo);
                    jDateChooser2.setDate(null);
                    Jt_Nombre.setText("");
                    jT_monto.setText("");

                } else {

                    String limite = "";

                    Statement ST_Configuracion = DBConexion.conexion.createStatement();
                    ResultSet RS_Configuracion = ST_Configuracion.executeQuery("Select * from configuracion");
                    while (RS_Configuracion.next()) {
                        limite = RS_Configuracion.getString("limite_pago").trim();
                    }

                    SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
                    Date emitidoDate = formateador.parse(RS_Productos.getString("emitido").trim());

                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    Date limiteDate = formatter.parse(limite);

                    if (emitidoDate.compareTo(limiteDate) < 0) {
                        JOptionPane.showMessageDialog(null, "Factura vencida");
                    } else {

                        String nuevo = getSepararMiles(RS_Productos.getString("total").trim().replace(".", "")) + " Gs.";
//                            String nuevo = getSepararMiles(strLong) + " Gs.";

                        Jt_Nombre.setText(RS_Productos.getString("nombre").trim());
                        jT_monto.setText(nuevo);
                        jDateChooser2.setDate(dNow);
                        jButton2.setEnabled(true);
                    }

                }
            }
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Buscar();

//
//        Date dNow = new Date();
//        Statement ST_Productos;
//        try {
//            ST_Productos = DBConexion.conexion.createStatement();
//            ResultSet RS_Productos = ST_Productos.executeQuery("select nombre, total, id_factura_estado, emitido "
//                    + "from factura "
//                    + "inner join cliente on factura.id_cliente = cliente.id_cliente "
//                    + " where numero = '" + jt_Nro_de_factura.getText() + "'");
//            while (RS_Productos.next()) {
//
//                if (RS_Productos.getInt("id_factura_estado") == 4) {
//                    JOptionPane.showMessageDialog(null, "Factura vencida");
//                } else if (RS_Productos.getInt("id_factura_estado") == 2) {
//                    JOptionPane.showMessageDialog(this, "La factura se encuentra pagada");
//                } else {
//
//                    String nuevo = getSepararMiles(RS_Productos.getString("total").replace(".", "")) + " Gs.";
//
//                    Jt_Nombre.setText(RS_Productos.getString("nombre").trim());
//                    jT_monto.setText(nuevo);
//                    jDateChooser2.setDate(dNow);
//                    jButton2.setEnabled(true);
//
//                }
//
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Error " + ex);
//        }


    }//GEN-LAST:event_jButton1ActionPerformed

    public synchronized static void Pagar() {
        try {
            Date dNow = new Date();
            SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");
            String ahora = ft.format(dNow);

            SimpleDateFormat yyyyMMdd = new SimpleDateFormat("yyyy-MM-dd");
            String dia = yyyyMMdd.format(jDateChooser2.getDate());

            long dva_factura = 0;
            long ddc_factura = 0;
            long dva_deuda = 0;

            int factura_id_cliente = 0;

            int ciclo_a_int = 0;
            int id_medidor = 0;

            ResultSet RS_factura;
            try (Statement ST_factura = DBConexion.conexion.createStatement()) {
                RS_factura = ST_factura.executeQuery("SELECT * from factura where numero='" + jt_Nro_de_factura.getText() + "'");
                if (RS_factura.next()) {
                    if (RS_factura.getInt("id_factura_estado") == 4) {
                        JOptionPane.showMessageDialog(null, "Factura vencida. No se puede pagar.");
                    } else {
                        ciclo_a_int = RS_factura.getInt("ciclo_a");
                        dva_factura = RS_factura.getLong("deuda_venta_agua");
                        ddc_factura = RS_factura.getLong("deuda_derecho_conexion");
                        factura_id_cliente = RS_factura.getInt("id_cliente");
                        id_medidor = RS_factura.getInt("id_medidor");
                    }
                }
            }

            Statement ST_deuda = DBConexion.conexion.createStatement();
            ResultSet RS_deuda = ST_deuda.executeQuery("SELECT * from deudas where id_cliente='" + factura_id_cliente + "'");
            if (RS_deuda.next()) {
                dva_deuda = RS_deuda.getLong("venta_agua");
            }

            if (ciclo_a_int > 0) {
                PreparedStatement ST_cliente_update = DBConexion.conexion.prepareStatement(""
                        + "UPDATE cliente SET "
                        + "mes='" + ciclo_a_int + "', "
                        + "anho = '2016' "
                        + "WHERE id_cliente='" + factura_id_cliente + "'");
                ST_cliente_update.executeUpdate();

                PreparedStatement stUpdateMedidor = DBConexion.conexion.prepareStatement(""
                        + "UPDATE medidor "
                        + "SET mes='" + ciclo_a_int + "', "
                        + "anho = '2016' "
                        + "WHERE id_medidor='" + id_medidor + "'");
                stUpdateMedidor.executeUpdate();
            }

            long venta = 0;
            venta = dva_deuda - dva_factura;
            PreparedStatement stUpdateCliente = DBConexion.conexion.prepareStatement(""
                    + "UPDATE deudas "
                    + "SET venta_agua='" + (venta) + "', "
                    + "derecho_conexion='" + (ddc_factura) + "' "
                    + "WHERE id_cliente='" + factura_id_cliente + "'");
            stUpdateCliente.executeUpdate();

            PreparedStatement ST_factura_pagar = DBConexion.conexion.prepareStatement(""
                    + "UPDATE factura "
                    + "SET id_factura_estado='2', "
                    + "fecha_pago='" + dia + "', "
                    + "punto_cobro='" + Logueo.pdc + "', "
                    + "fecha_hora_pagado = '" + ahora + "'  "
                    + "WHERE numero='" + jt_Nro_de_factura.getText() + "'");
            ST_factura_pagar.executeUpdate();

            jt_Nro_de_factura.setText("");

            JOptionPane.showMessageDialog(null, "Pago Realizado con exito");
            Principal.jButton2.setEnabled(false);
            Jt_Nombre.setText("");
            jT_monto.setText("");
            jt_Nro_de_factura.grabFocus();

            Buscar_Facturas();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Pagar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        try {
            if (DBConexion.conexion.isClosed()) {
                DBConexion.Iniciar_Conexion();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }

    }//GEN-LAST:event_formWindowActivated

    public synchronized static void Buscar_Facturas() {
        try {

            long total = 0;
            long otros = 0;
            long comision = 0;

            SimpleDateFormat yyyyMMdd = new SimpleDateFormat("yyyy-MM-dd");
            String dia = yyyyMMdd.format(jDateChooser3.getDate());

            ResultSetMetaData rsm;
            DefaultTableModel dtm;
            PreparedStatement ps;
            ResultSet rs;
            ps = DBConexion.conexion.prepareStatement(""
                    + "select numero, fecha_pago, nombre, total, comision,otros from factura "
                    + "inner join cliente on "
                    + "cliente.id_cliente = factura.id_cliente "
                    + "where punto_cobro = '" + Logueo.pdc + "' and fecha_pago = '" + dia + "'");
            rs = ps.executeQuery();
            rsm = rs.getMetaData();
            dtm = (DefaultTableModel) jTable1.getModel();
            for (int j = 0; j < jTable1.getRowCount(); j++) {
                dtm.removeRow(j);
                j -= 1;
            }
            ArrayList<Object[]> data = new ArrayList<>();
            while (rs.next()) {
                Object[] rows = new Object[rsm.getColumnCount()];
                for (int i = 0; i < rows.length; i++) {
                    if (rs.getObject(i + 1).toString().length() > 0) {
                        rows[i] = rs.getObject(i + 1).toString().trim();
                    } else {
                        rows[i] = rs.getObject(i + 1);
                    }

                }
                data.add(rows);
                long totallong = Long.parseLong(rs.getString("total").trim().replace(".", ""));
                total = total + totallong;
                otros = otros + rs.getLong("otros");
                long comilong = Long.parseLong(rs.getString("comision").trim().replace(".", ""));
                //System.err.println(comilong);
                comision = comision + comilong;
            }
            dtm = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < data.size(); i++) {
                dtm.addRow(data.get(i));
            }

            String strLong = Long.toString(total);
            String nuevo = getSepararMiles(strLong) + " Gs.";

            jTextField_total.setText(nuevo);

            strLong = Long.toString(comision);
            nuevo = getSepararMiles(strLong) + " Gs.";

            jTextField_comision.setText(nuevo);

            strLong = Long.toString(otros);
            nuevo = getSepararMiles(strLong) + " Gs.";

            jTextField_otros.setText(nuevo);

            // ############################################### reporte de caja
            // Limpiar tabla reporte_caja
            String sqlDelete = "truncate table reporte_caja";
            Statement stAuxiliar = DBConexion.conexion.createStatement();
            stAuxiliar.executeUpdate(sqlDelete);

            String pc = null;
            String pc2 = null;

            Statement ST_punto = DBConexion.conexion.createStatement();
            ResultSet RS_punto = ST_punto.executeQuery("select * from puntos_cobro where id_punto_cobro = '" + Logueo.pdc + "'");
            while (RS_punto.next()) {
                pc = RS_punto.getString("id_punto_cobro");
                pc2 = RS_punto.getString("comercio");
            }

            DecimalFormat num = new DecimalFormat("#,###,###");
            total = 0;
            long total_comision = 0;

            String numero = null;

            Statement stArqueo = DBConexion.conexion.createStatement();
            ResultSet rsArqueo = stArqueo.executeQuery(""
                    + "select * from factura "
                    + "where fecha_pago = '" + dia + "' "
                    + "and punto_cobro = '" + Logueo.pdc + "' "
                    + "and borrado != '1' "
                    + "and numero > '0' "
                    + "order by numero");
            while (rsArqueo.next()) {

                numero = rsArqueo.getString("numero");
                String nombre = "";
                Statement ST_Cliente = DBConexion.conexion.createStatement();
                ResultSet RS_Cliente = ST_Cliente.executeQuery(""
                        + "select nombre "
                        + "from cliente "
                        + "where id_cliente='" + rsArqueo.getString("id_cliente") + "'");
                while (RS_Cliente.next()) {
                    nombre = RS_Cliente.getString("nombre");
                }

                RS_Cliente.close();
                ST_Cliente.close();

                int ciclo_de_int = rsArqueo.getInt("ciclo_de");
                String ciclo_de_char = "";

                if (ciclo_de_int == 1) {
                    ciclo_de_char = "Enero / ";
                }
                if (ciclo_de_int == 2) {
                    ciclo_de_char = "Febrero / ";
                }
                if (ciclo_de_int == 3) {
                    ciclo_de_char = "Marzo / ";
                }
                if (ciclo_de_int == 4) {
                    ciclo_de_char = "Abril / ";
                }
                if (ciclo_de_int == 5) {
                    ciclo_de_char = "Mayo / ";
                }
                if (ciclo_de_int == 6) {
                    ciclo_de_char = "Junio / ";
                }
                if (ciclo_de_int == 7) {
                    ciclo_de_char = "Julio / ";
                }
                if (ciclo_de_int == 8) {
                    ciclo_de_char = "Agosto / ";
                }
                if (ciclo_de_int == 9) {
                    ciclo_de_char = "Setiembre / ";
                }
                if (ciclo_de_int == 10) {
                    ciclo_de_char = "Octubre / ";
                }
                if (ciclo_de_int == 11) {
                    ciclo_de_char = "Noviembre / ";
                }
                if (ciclo_de_int == 12) {
                    ciclo_de_char = "Diciembre / ";
                }

                int ciclo_a_int = rsArqueo.getInt("ciclo_a");
                String ciclo_a_char = "";

                if (ciclo_a_int == 1) {
                    ciclo_a_char = "Enero";
                }
                if (ciclo_a_int == 2) {
                    ciclo_a_char = "Febrero";
                }
                if (ciclo_a_int == 3) {
                    ciclo_a_char = "Marzo";
                }
                if (ciclo_a_int == 4) {
                    ciclo_a_char = "Abril";
                }
                if (ciclo_a_int == 5) {
                    ciclo_a_char = "Mayo";
                }
                if (ciclo_a_int == 6) {
                    ciclo_a_char = "Junio";
                }
                if (ciclo_a_int == 7) {
                    ciclo_a_char = "Julio";
                }
                if (ciclo_a_int == 8) {
                    ciclo_a_char = "Agosto";
                }
                if (ciclo_a_int == 9) {
                    ciclo_a_char = "Setiembre";
                }
                if (ciclo_a_int == 10) {
                    ciclo_a_char = "Octubre";
                }
                if (ciclo_a_int == 11) {
                    ciclo_a_char = "Noviembre";
                }
                if (ciclo_a_int == 12) {
                    ciclo_a_char = "Diciembre";
                }

                if ((rsArqueo.getInt("ciclo_a") == 0) && (rsArqueo.getInt("ciclo_de") == 0)) {
                    ciclo_a_char = rsArqueo.getString("ciclo");
                }

                long importe = rsArqueo.getLong("total");

                total = (rsArqueo.getInt("total") + total);
                total_comision = (rsArqueo.getInt("comision") + total_comision);

                int id = 1;
                Statement st1 = DBConexion.conexion.createStatement();
                ResultSet result = st1.executeQuery("SELECT MAX(id_reporte_caja) FROM reporte_caja");
                if (result.next()) {
                    id = result.getInt(1) + 1;
                }

                PreparedStatement st2 = DBConexion.conexion.prepareStatement("INSERT INTO reporte_caja VALUES(?,?,?,?,?,?,?,?,?)");
                st2.setInt(1, id);
                st2.setString(2, nombre);
                st2.setString(3, ciclo_de_char + ciclo_a_char);
                st2.setLong(4, importe);
                st2.setString(5, dia);
                st2.setString(6, dia);
                st2.setString(7, pc2);
                st2.setString(8, numero);
                st2.setLong(9, total_comision);

                total_comision = 0;

                st2.executeUpdate();

            }

        } catch (SQLException ex) {
            System.err.println("Error: " + ex);
        }

    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

//        jTextField_comercio.setText("Registrado como: "+Metods.usuario);
        Date hoy = new Date();
        jDateChooser3.setDate(hoy);
        Buscar_Facturas();

    }//GEN-LAST:event_formWindowOpened

    private void jt_Nro_de_facturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt_Nro_de_facturaKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER)) {

            Buscar();
//            Date dNow = new Date();
//            Statement ST_Productos;
//            try {
//                ST_Productos = DBConexion.conexion.createStatement();
//                ResultSet RS_Productos = ST_Productos.executeQuery("select nombre, total, id_factura_estado, emitido \n"
//                        + "\n"
//                        + "from factura \n"
//                        + "\n"
//                        + "inner join cliente on factura.id_cliente = cliente.id_cliente\n"
//                        + "\n"
//                        + " where numero = '" + jt_Nro_de_factura.getText() + "'");
//                while (RS_Productos.next()) {
//
//                    if (RS_Productos.getInt("id_factura_estado") == 2) {
//                        JOptionPane.showMessageDialog(this, "La factura se encuentra pagada");
//                        jButton2.setEnabled(false);
//
////                        String strLong = Long.toString(RS_Productos.getLong("total"));
////                        String nuevo = getSepararMiles(strLong) + " Gs.";
////                        Jt_Nombre.setText(RS_Productos.getString("nombre").trim());
////                        jT_monto.setText(nuevo);
//                        jDateChooser2.setDate(null);
//                        Jt_Nombre.setText("");
//                        jT_monto.setText("");
//
//                    } else {
//
//                        String limite = "";
//
//                        Statement ST_Configuracion = DBConexion.conexion.createStatement();
//                        ResultSet RS_Configuracion = ST_Configuracion.executeQuery("Select * from configuracion");
//                        while (RS_Configuracion.next()) {
//                            limite = RS_Configuracion.getString("limite_pago").trim();
//                        }
//
//                        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd");
//                        Date emitidoDate = formateador.parse(RS_Productos.getString("emitido").trim());
//
//                        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//                        Date limiteDate = formatter.parse(limite);
//
//                        if (emitidoDate.compareTo(limiteDate) < 0) {
//                            JOptionPane.showMessageDialog(this, "Factura vencida");
//                        } else {
//
//                            String nuevo = getSepararMiles(RS_Productos.getString("total").trim().replace(".", "")) + " Gs.";
////                            String nuevo = getSepararMiles(strLong) + " Gs.";
//
//                            Jt_Nombre.setText(RS_Productos.getString("nombre").trim());
//                            jT_monto.setText(nuevo);
//                            jDateChooser2.setDate(dNow);
//                            jButton2.setEnabled(true);
//                        }
//
//                    }
//                }
//            } catch (SQLException | ParseException ex) {
//                JOptionPane.showMessageDialog(this, ex);
//            }
        }

    }//GEN-LAST:event_jt_Nro_de_facturaKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    }//GEN-LAST:event_formWindowClosing

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Buscar_Facturas();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String ubicacion_proyecto = new File("").getAbsolutePath();
        String path = ubicacion_proyecto + "\\reports\\reporte_caja.jasper";
        JasperReport jr = null;

        try {
            jr = (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, DBConexion.conexion);

            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);

        } catch (JRException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(jDateChooser3.getDate());
        calendar.add(Calendar.DAY_OF_YEAR, -1);
        jDateChooser3.setDate(calendar.getTime());
        Buscar_Facturas();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        Calendar calendar = Calendar.getInstance();
        calendar.setTime(jDateChooser3.getDate());
        calendar.add(Calendar.DAY_OF_YEAR, 1);
        jDateChooser3.setDate(calendar.getTime());
        Buscar_Facturas();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField_otrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_otrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_otrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField Jt_Nombre;
    private javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public static com.toedter.calendar.JDateChooser jDateChooser2;
    public static com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_otros;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField jT_monto;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTextField jTextField_comision;
    public static javax.swing.JTextField jTextField_otros;
    public static javax.swing.JTextField jTextField_total;
    public static javax.swing.JTextField jt_Nro_de_factura;
    // End of variables declaration//GEN-END:variables
}
